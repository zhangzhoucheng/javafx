<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.test.javafxmvn.common.entity.mapper.PyProcessMapper" >
  <resultMap id="BaseResultMap" type="com.zz.test.javafxmvn.common.entity.PyProcess">
    <id column="process_id" jdbcType="INTEGER" property="processId" />
    <result column="process_code" jdbcType="VARCHAR" property="processCode" />
    <result column="process_name" jdbcType="VARCHAR" property="processName" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="process_remark" jdbcType="VARCHAR" property="processRemark" />
    <result column="process_status" jdbcType="CHAR" property="processStatus" />
    <result column="disable" jdbcType="INTEGER" property="disable" />
    <result column="process_cron" jdbcType="VARCHAR" property="processCron" />
    <result column="cron_calibration" jdbcType="INTEGER" property="cronCalibration" />
    <result column="every_day_start_flag" jdbcType="INTEGER" property="everyDayStartFlag" />
    <result column="execute_max" jdbcType="INTEGER" property="executeMax" />
    <result column="process_limittime" jdbcType="INTEGER" property="processLimittime" />
    <result column="process_othmsg" jdbcType="VARCHAR" property="processOthmsg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    process_id, process_code, process_name, type_code, process_remark, process_status, 
    disable, process_cron, cron_calibration, every_day_start_flag, execute_max, process_limittime, process_othmsg
  </sql>
  <select id="selectByExample" parameterType="com.zz.test.javafxmvn.common.entity.PyProcessExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from py_process
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from py_process
    where process_id = #{processId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from py_process
    where process_id = #{processId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zz.test.javafxmvn.common.entity.PyProcessExample">
    delete from py_process
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zz.test.javafxmvn.common.entity.PyProcess">
    insert into py_process (process_id, process_code, process_name, 
      type_code, process_remark, process_status, 
      disable, process_cron, cron_calibration, 
      every_day_start_flag, execute_max, process_limittime
      )
    values (#{processId,jdbcType=INTEGER}, #{processCode,jdbcType=VARCHAR}, #{processName,jdbcType=VARCHAR}, 
      #{typeCode,jdbcType=VARCHAR}, #{processRemark,jdbcType=VARCHAR}, #{processStatus,jdbcType=CHAR}, 
      #{disable,jdbcType=INTEGER}, #{processCron,jdbcType=VARCHAR}, #{cronCalibration,jdbcType=INTEGER}, 
      #{everyDayStartFlag,jdbcType=INTEGER}, #{executeMax,jdbcType=INTEGER}, #{processLimittime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zz.test.javafxmvn.common.entity.PyProcess">
    insert into py_process
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="processId != null">
        process_id,
      </if>
      <if test="processCode != null">
        process_code,
      </if>
      <if test="processName != null">
        process_name,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="processRemark != null">
        process_remark,
      </if>
      <if test="processStatus != null">
        process_status,
      </if>
      <if test="disable != null">
        disable,
      </if>
      <if test="processCron != null">
        process_cron,
      </if>
      <if test="cronCalibration != null">
        cron_calibration,
      </if>
      <if test="everyDayStartFlag != null">
        every_day_start_flag,
      </if>
      <if test="executeMax != null">
        execute_max,
      </if>
      <if test="processLimittime != null">
        process_limittime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="processId != null">
        #{processId,jdbcType=INTEGER},
      </if>
      <if test="processCode != null">
        #{processCode,jdbcType=VARCHAR},
      </if>
      <if test="processName != null">
        #{processName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="processRemark != null">
        #{processRemark,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        #{processStatus,jdbcType=CHAR},
      </if>
      <if test="disable != null">
        #{disable,jdbcType=INTEGER},
      </if>
      <if test="processCron != null">
        #{processCron,jdbcType=VARCHAR},
      </if>
      <if test="cronCalibration != null">
        #{cronCalibration,jdbcType=INTEGER},
      </if>
      <if test="everyDayStartFlag != null">
        #{everyDayStartFlag,jdbcType=INTEGER},
      </if>
      <if test="executeMax != null">
        #{executeMax,jdbcType=INTEGER},
      </if>
      <if test="processLimittime != null">
        #{processLimittime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zz.test.javafxmvn.common.entity.PyProcessExample" resultType="java.lang.Long">
    select count(*) from py_process
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update py_process
    <set>
      <if test="record.processId != null">
        process_id = #{record.processId,jdbcType=INTEGER},
      </if>
      <if test="record.processCode != null">
        process_code = #{record.processCode,jdbcType=VARCHAR},
      </if>
      <if test="record.processName != null">
        process_name = #{record.processName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCode != null">
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.processRemark != null">
        process_remark = #{record.processRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.processStatus != null">
        process_status = #{record.processStatus,jdbcType=CHAR},
      </if>
      <if test="record.disable != null">
        disable = #{record.disable,jdbcType=INTEGER},
      </if>
      <if test="record.processCron != null">
        process_cron = #{record.processCron,jdbcType=VARCHAR},
      </if>
      <if test="record.cronCalibration != null">
        cron_calibration = #{record.cronCalibration,jdbcType=INTEGER},
      </if>
      <if test="record.everyDayStartFlag != null">
        every_day_start_flag = #{record.everyDayStartFlag,jdbcType=INTEGER},
      </if>
      <if test="record.executeMax != null">
        execute_max = #{record.executeMax,jdbcType=INTEGER},
      </if>
      <if test="record.processLimittime != null">
        process_limittime = #{record.processLimittime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update py_process
    set process_id = #{record.processId,jdbcType=INTEGER},
      process_code = #{record.processCode,jdbcType=VARCHAR},
      process_name = #{record.processName,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      process_remark = #{record.processRemark,jdbcType=VARCHAR},
      process_status = #{record.processStatus,jdbcType=CHAR},
      disable = #{record.disable,jdbcType=INTEGER},
      process_cron = #{record.processCron,jdbcType=VARCHAR},
      cron_calibration = #{record.cronCalibration,jdbcType=INTEGER},
      every_day_start_flag = #{record.everyDayStartFlag,jdbcType=INTEGER},
      execute_max = #{record.executeMax,jdbcType=INTEGER},
      process_limittime = #{record.processLimittime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zz.test.javafxmvn.common.entity.PyProcess">
    update py_process
    <set>
      <if test="processCode != null">
        process_code = #{processCode,jdbcType=VARCHAR},
      </if>
      <if test="processName != null">
        process_name = #{processName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="processRemark != null">
        process_remark = #{processRemark,jdbcType=VARCHAR},
      </if>
      <if test="processStatus != null">
        process_status = #{processStatus,jdbcType=CHAR},
      </if>
      <if test="disable != null">
        disable = #{disable,jdbcType=INTEGER},
      </if>
      <if test="processCron != null">
        process_cron = #{processCron,jdbcType=VARCHAR},
      </if>
      <if test="cronCalibration != null">
        cron_calibration = #{cronCalibration,jdbcType=INTEGER},
      </if>
      <if test="everyDayStartFlag != null">
        every_day_start_flag = #{everyDayStartFlag,jdbcType=INTEGER},
      </if>
      <if test="executeMax != null">
        execute_max = #{executeMax,jdbcType=INTEGER},
      </if>
      <if test="processLimittime != null">
        process_limittime = #{processLimittime,jdbcType=INTEGER},
      </if>
    </set>
    where process_id = #{processId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zz.test.javafxmvn.common.entity.PyProcess">
    update py_process
    set process_code = #{processCode,jdbcType=VARCHAR},
      process_name = #{processName,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      process_remark = #{processRemark,jdbcType=VARCHAR},
      process_status = #{processStatus,jdbcType=CHAR},
      disable = #{disable,jdbcType=INTEGER},
      process_cron = #{processCron,jdbcType=VARCHAR},
      cron_calibration = #{cronCalibration,jdbcType=INTEGER},
      every_day_start_flag = #{everyDayStartFlag,jdbcType=INTEGER},
      execute_max = #{executeMax,jdbcType=INTEGER},
      process_limittime = #{processLimittime,jdbcType=INTEGER}
    where process_id = #{processId,jdbcType=INTEGER}
  </update>
</mapper>